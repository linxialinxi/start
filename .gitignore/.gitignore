----------18.3.7更新----------
可忽略：'先用广义逻辑回归进行一个简单建模，由于运算限制，去除了几个id属性和长变量，但是最终结果不理想
data<-read.table("round1_ijcai_18_train_20180301.txt",header=T)
df <- data[-1]
df$is_trade <- factor(df$is_trade,levels=c(0,1),labels=c("NO","YES"))
df <- df[c(-1,-10,-15,-19)]
b=as.vector(df$item_category_list)
name1 <- strsplit(b,split=";")
iclcategory_0 <- sapply(name1,"[",1)
iclcategory_1 <- sapply(name1,"[",2)
iclcategory_2 <- sapply(name1,"[",3)
df <- cbind(iclcategory_0,iclcategory_1,iclcategory_2,df[,-1])

c=as.vector(df$item_property_list)
name2 <- strsplit(c,split=";")
iplproperty_0 <- sapply(name2,"[",1)
iplproperty_1 <- sapply(name2,"[",2)
iplproperty_2 <- sapply(name2,"[",3)
df2 <- cbind(iplproperty_0,iplproperty_1,iplproperty_2,df[,-4])

d=as.vector(df$predict_category_property)
name3 <- strsplit(d,split=";")
pcpcategory_A <- sapply(name3,"[",1)
pcpcategory_B <- sapply(name3,"[",2)
pcpcategory_C <- sapply(name3,"[",3)
df3 <- cbind(pcpcategory_A,pcpcategory_B,pcpcategory_C,df2[,-19])

df4 <- df3[c(-7)]


e=as.vector(df3$pcpcategory_A)
name4 <- strsplit(e,split=":")
pcpcategory_A_1 <- sapply(name4,"[",1)
pcpcategory_A_2 <- sapply(name4,"[",2)
df5 <- cbind(pcpcategory_A_1,pcpcategory_A_2,df4[,-1])

f=as.vector(df3$pcpcategory_B)
name5 <- strsplit(f,split=":")
pcpcategory_B_1 <- sapply(name5,"[",1)
pcpcategory_B_2 <- sapply(name5,"[",2)
df6 <- cbind(pcpcategory_B_1,pcpcategory_B_2,df5[,-3])

g=as.vector(df3$pcpcategory_C)
name6 <- strsplit(g,split=":")
pcpcategory_C_1 <- sapply(name6,"[",1)
pcpcategory_C_2 <- sapply(name6,"[",2)
df7 <- cbind(pcpcategory_C_1,pcpcategory_C_2,df6[,-5])

item_brand_id <- as.character(df7$item_brand_id)
item_city_id <- as.character(df$item_city_id)
df8 <- cbind(item_brand_id,item_city_id,df7)
head(df8)
df9 <- df8[c(-14,-15)]

df10 <- df9[c(-13)]

df10[df10==-1] <- NA

dfuser <- df10[,c(17,18,19,20,29)]
dfuserna <- na.omit(dfuser)
fit.full <- glm(is_trade ~ .,data=dfuserna,family=binomial)
summary(fit.full)


dfshop <-df10[,c(23:29)]
dfshopna <- na.omit(dfshop)
fit.full2 <- glm(is_trade ~ .,data=dfshopna,family=binomial)
summary(fit.full2)


newdate <- as.POSIXct(df10$context_timestamp, origin="1970-01-01 00:00:00")
df11 <- df10[,c(-21)]
df12 <- cbind(df11,newdate)

library(lubridate)
contextday <- day(newdate)
contextwday <- wday(newdate)
contexthour <- hour(newdate)
contextminute <- minute(newdate)
contextsecond <- second(newdate)

df13 <- cbind(df12,contextday,contextwday,contexthour,contextminute,contextsecond)
df14 <- df13[c(-29)]

dftime <-df14[,c(28:33)]
dftimena <- na.omit(dftime)
fit.full3 <- glm(is_trade ~ .,data=dftimena,family=binomial)
summary(fit.full3)

dfeasy <-df14[,c(13:33)]
dfeasyna <- na.omit(dfeasy)
fit.full4 <- glm(is_trade ~ .,data=dfeasyna,family=binomial)
summary(fit.full4)

set.seed(1234)
train <- sample(nrow(dfeasyna),0.7*nrow(dfeasyna))
df.train <- dfeasyna[train,]
df.validate <- dfeasyna[-train,]
table(df.train$is_trade)
table(df.validate$is_trade)

fit.logit <- glm(is_trade~.,data = df.train,family=binomial())
summary(fit.logit)

prob <- predict(fit.logit,df.validate,type="response")
logit.pred <- factor(prob>.05,levels=c(FALSE,TRUE),labels=c("NO","YES"))
logit.perf <- table(df.validate$is_trade,logit.pred,dnn=c("Actual","Predicted"))
logit.perf

这个模型：95.51


----------18.3.9更新----------
觉得应该要先把数据整理清楚   summary()   library(Hmisc)  describe()
'导入数据--'根据样本id去除重复数据--'把数据里面的-1值标注成NA以便统计--'进行统计描述，查看各个变量的统计描述，缺失值，分类，最大最小值等
data<-read.table("round1_ijcai_18_train_20180301.txt",header=T)
d1 <-data[!duplicated(data$instance_id),]
d1[d1==-1] <- NA

结果：27  Variables      478087  Observations
      27个变量，478087个不重复观测值
      
其中变量instance_id和context_id各有478087个不同的值，说明这就是编号属性，所以可以剔除
至于item_id,user_id,shop_id值没有那么多，所以看看这三个id对应的各属性值是否一致，如果一致，仍然可以剔除

任务：确定这三个id值是否可剔除
'提取广告商品信息进行辨别
                d2 <- d1[c(2:10)]
                describe(d2)
                d22<-unique(d2)
                describe(d22)


----------18.3.13更新----------
确定其他三个id值都可以删除，因为他们对应的具体属性会有变化，所以id值不必参与建模
'丢弃五个id变量
d2 <- names(d1) %in% c("instance_id","item_id","user_id","context_id","shop_id")
d3 <- d1[!d2]

现在只剩下22个变量 其中，一个因变量is_trade

任务：
1.把几个长变量分列成几个小的属性
2.处理na值，即missing值。（比赛简介有说-1是NA值，在3.9日我已经把-1全部变成了NA值）

1.
拆分（item_category_list/predict_category_property/item_property_list）
a=as.vector(d3$item_category_list)
name1 <- strsplit(a,split=";")
iclcategory_0 <- sapply(name1,"[",1)
iclcategory_1 <- sapply(name1,"[",2)
iclcategory_2 <- sapply(name1,"[",3)
d4 <- cbind(iclcategory_0,iclcategory_1,iclcategory_2,d3[,-1])

b=as.vector(d4$predict_category_property)
name2 <- strsplit(b,split=";")
pcpcategory_A <- sapply(name2,"[",1)
pcpcategory_B <- sapply(name2,"[",2)
pcpcategory_C <- sapply(name2,"[",3)
d4 <- cbind(pcpcategory_A,pcpcategory_B,pcpcategory_C,d4[,-17])

c=as.vector(d4$item_property_list)
name3 <- strsplit(c,split=";")
iplproperty_0 <- sapply(name3,"[",1)
iplproperty_1 <- sapply(name3,"[",2)
iplproperty_2 <- sapply(name3,"[",3)
d4 <- cbind(iplproperty_0,iplproperty_1,iplproperty_2,d4[,-7])

d=as.vector(d4$pcpcategory_A)
name4 <- strsplit(d,split=":")
pcpcategory_A1 <- sapply(name4,"[",1)
pcpcategory_A2 <- sapply(name4,"[",2)
d4 <- cbind(pcpcategory_A1,pcpcategory_A2,d4[,-4])

e=as.vector(d4$pcpcategory_B)
name5 <- strsplit(e,split=":")
pcpcategory_B1 <- sapply(name5,"[",1)
pcpcategory_B2 <- sapply(name5,"[",2)
d4 <- cbind(pcpcategory_B1,pcpcategory_B2,d4[,-6])


f=as.vector(d4$pcpcategory_C)
name6 <- strsplit(f,split=":")
pcpcategory_C1 <- sapply(name6,"[",1)
pcpcategory_C2 <- sapply(name6,"[",2)
d4 <- cbind(pcpcategory_C1,pcpcategory_C2,d4[,-8])

d4[d4==-1] <- NA

此时得到31个变量，其中iclcategory_0全部是7908382889764677758，删除
iclcategory_2缺失值476058，占样本比例太高，删除

d5 <- names(d4) %in% c("iclcategory_0","iclcategory_2")
d5 <- d4[!d5]





d4 <- d3[!complete.cases(d3),]
library(mice)
md.pattern(d4)
data1<-read.table("round1_ijcai_18_test_a_20180301.txt",header=T)
data1[data1==-1] <- NA
md.pattern(data1)

